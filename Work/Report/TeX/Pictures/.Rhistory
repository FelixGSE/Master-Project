set.seed(123)
runif(1)
pnorm(100)
pnorm(1)
pnorm(c(1,23))
pnorm(rnorm(100))
plot(pnorm(rnorm(10000)))
if (!require("RColorBrewer")) install.packages("RColorBrewer");
brewer.pal(7,"RdBU")
PRGn
brewer.pal(7,"PRGn")
brewer.pal(100,"PRGn")
colorRampPalette(brewer.pal(9,"Reds"))(100)
reds  <- colorRampPalette(brewer.pal(9,"Reds"))(11)
blues <- colorRampPalette(brewer.pal(9,"Blues"))(11)
diverging.colors <- c(reds,blues)
diverging.colors
library('igraph')
erdos.renyi.game(20, p=0.4, directed = FALSE, loops = FALSE)
union(g01,g02)
g01 <- erdos.renyi.game(20, p=0.4, directed = FALSE, loops = FALSE)
g02 <- erdos.renyi.game(20, p=0.4, directed = FALSE, loops = FALSE)
union(g01,g02)
0.2*40
.15*40
6/40
plot(g03)
g03 <- union(g01,g02)
plot(g03)
15/40
rewire.edges(graph, p=15/40, loops=FALSE, multiple=FALSE)
rewire.edges(g03, p=15/40, loops=FALSE, multiple=FALSE)
library('igraph')
rewire(g03, p=15/40, loops=FALSE, multiple=FALSE)
rewire(g03, each_edge(prob = 0.05), loops=FALSE, multiple=FALSE)
rewire(g03, each_edge(prob = 0.05))
g03 <- rewire( union(g01,g02), each_edge(prob = 0.05))
plot(g03)
edge.betweenness.community(g03)
modularity(g03)
GN <- edge.betweenness.community(g03)
modularity(g, membership(GN))
modularity(g03, membership(GN))
MM <- optimal.community(g03, weights = NULL)
GGM
GM
MM <- optimal.community(g03, weights = NULL)
MM
g03 <- rewire( intersect(g01,g02), each_edge(prob = 0.05))
g03 <- rewire( union(g01,g02), each_edge(prob = 0.05))
V(g01)$name
V(g01)$name <- 21:40
V(g01)$name
g01 <- erdos.renyi.game(20, p=0.4, directed = FALSE, loops = FALSE)
g02 <- erdos.renyi.game(20, p=0.4, directed = FALSE, loops = FALSE)
g03 <- rewire( union(g01,g02), each_edge(prob = 0.05))
plot(g03)
plot(g01)
V(g01)$name <- 0:20
V(g01)$name <- 1:20
V(g02)$name <- 21:40
# Merge graphs and rewire edges
g03 <- rewire( union(g01,g02), each_edge(prob = 0.05))
g02
plot(g02)
g03 <- rewire( union(g01,g02), each_edge(prob = 0.05))
g03 <- rewire( c(g01,g02), each_edge(prob = 0.05))
g03 <- rewire( g01, each_edge(prob = 0.05))
plot(g01)
union(g01,g02)
class(g02)
union(g01,g02)
g01 <- erdos.renyi.game(20, p=0.4, directed = FALSE, loops = FALSE)
g02 <- erdos.renyi.game(20, p=0.4, directed = FALSE, loops = FALSE)
union(g01,g02)
V(g01)$name <- paste(1:20)
plot(g01)
paste(1:20)
V(g02)$name <- paste(21:40)
g03 <- rewire( union(g01,g02), each_edge(prob = 0.05))
plot(g03)
plot(g01)
plot(g03)
cg <- contract.vertices(g03, membership(GN))
GN
GN <- edge.betweenness.community(g03)
cg <- contract.vertices(g03, membership(GN))
E(cg)$weight <- 1
cg2 <- simplify(cg, remove.loops=FALSE)
## Plot the community graph
plot(cg2, edge.label=E(cg2)$weight, margin=.5, layout=layout.circle)
GN
cg <- contract.vertices(g03, membership(GN))
plot(cg2, margin=.5, layout=layout.circle)
plot(cg, margin=.5, layout=layout.circle)
plot(g03,col=memberhsip(GN))
plot(g03,col=membership(GN))
plot(GN, g03, layout=coords)
coords <- crossing(GN, g03)
plot(GN, g03, layout=coords)
plot(GN, g03, layout=layout_with_fr(g03))
g03 <- rewire( union(g01,g02), each_edge(prob = 15/40))
GN <- edge.betweenness.community(g03)
MM <- optimal.community(g03, weights = NULL)
GN <- edge.betweenness.community(g03)
MM <- optimal.community(g03)
plot(GN, g03, layout=layout_with_fr(g03))
# (1) - Create two random undirected graphs with p=0.4 and 20 nodes
g01 <- erdos.renyi.game(20, p=0.4, directed = FALSE, loops = FALSE)
g02 <- erdos.renyi.game(20, p=0.4, directed = FALSE, loops = FALSE)
V(g01)$name <- paste(1:20)
V(g02)$name <- paste(21:40)
GN <- edge.betweenness.community(g03)
plot(GN, g03, layout=layout_with_fr(g03))
GN
15/40
ecount(g03)
p <- 15/ecount(g03)
g03 <- rewire( union(g01,g02), each_edge(prob = p))
GN <- edge.betweenness.community(g03)
MM <- optimal.community(g03)
plot(GN, g03, layout=layout_with_fr(g03))
p
plot(MM, g03, layout=layout_with_fr(g03))
plot(GN, g03, layout=layout.start(g03))
plot(GN, g03, layout=layout.star(g03))
plot(GN, g03, layout=layout.nicely(g03))
plot(GN, g03, layout=layout_nicely(g03))
dendPlot(GN)
dendPlot(MM)
dendPlot(GN)
plot(GN, g03, layout=layout_nicely(g03),col=c('red','blue'))
plot(GN, g03, layout=layout_nicely(g03),mark.groups=c('red','blue'))
plot(GN, g03, layout=layout_nicely(g03),mark.groups('red','blue'))
plot(GN, g03, layout=layout_nicely(g03),groups('red','blue'))
plot(GN, g03, layout=layout_nicely(g03),col=c('red','b'))
plot(GN, g03, layout=layout_nicely(g03))
plot(GN, g03, layout=layout_nicely(g03),mark.col=c("#C5E5E7","#ECD89A"), mark.border=NA)
pers.blue
### Styling options
co <- 1/255
pers.green      <- rgb( co *  14 ,  co * 105 , co *  90 )
pers.blue       <- rgb( co *  22 ,  co *  54 , co *  92 )
pers.red        <- rgb( co *  99 ,  co *  37 , co *  35 )
pers.gray       <- rgb( co * 150 ,  co * 150 , co * 150 )
pers.orange     <- rgb( co * 186 ,  co *  85 , co *  59 )
pers.beige      <- rgb( co * 196 ,  co * 189 , co * 151 )
pers.blue
plot(GN, g03, layout=layout_nicely(g03),mark.col=c(pers.blue,pers.green), mark.border=NA)
plot(GN, g03, layout=layout_nicely(g03),mark.col=c(pers.blue,pers.green,alpha = 0.3), mark.border=NA)
plot(GN, g03, layout=layout_nicely(g03),mark.col=c(pers.blue,pers.green),alpha = 0.3, mark.border=NA)
plot(GN, g03, layout=layout_nicely(g03),mark.col=c("#C5E5E7","#ECD89A"), mark.border=NA)
colorRampPalette(brewer.pal(9,”Blues”))(100)
library('RColorBrewer')
colorRampPalette(brewer.pal(9,”Blues”))(100)
colorRampPalette(brewer.pal(9,"Blues"))(100)
plot(GN, g03, layout=layout_nicely(g03),mark.col=c("#F0F7FD","#ECD89A"), mark.border=NA)
plot(GN, g03, layout=layout_nicely(g03),mark.col=c("#B5D3E9","#ECD89A"), mark.border=NA)
colorRampPalette(brewer.pal(9,"Greens"))(100)
plot(GN, g03, layout=layout_nicely(g03),mark.col=c("#B5D3E9","#B6E2B0"), mark.border=NA)
plot(GN, g03, layout=layout_nicely(g03),mark.col=c("#B5D3E9","#B6E2B0"), mark.border=TRUE)
plot(GN, g03, layout=layout_nicely(g03),mark.col=c("#B5D3E9","#B6E2B0"), mark.border=c('black','black'))
plot(MM, g03, layout=layout_with_fr(g03),mark.col=c("#B5D3E9","#B6E2B0"), mark.border=c('black','black'))
dendPlot(GN)
plot(GN, g03, layout=layout_nicely(g03),mark.col=c('black',"#B6E2B0"), ark.border=c('black','black'))
plot(GN, g03, layout=layout_nicely(g03),mark.col=c('black',"#B6E2B0"), mark.border=c('black','black'))
plot(GN, g03, layout=layout_nicely(g03),mark.col=c('black','black'), mark.border=c('black','black'))
"#B5D3E9"
plot(GN, g03, layout=layout_nicely(g03),mark.col=c("#B5D3E9","#B6E2B0"), mark.border=c('black','black'))
## Clear workspace
rm(list = ls())
### Set general file path
setwd('~/Documents/GSE/Term 3/Master_Project/Master-Project/Work/')
### Load Packages
if (!require("RColorBrewer")) install.packages("RColorBrewer"); library(RColorBrewer)
if (!require("rjson"))        install.packages("rjson");        library(rjson)
### Get auxilliary functions
source('Code and Analysis/R-Files/Auxlliary_Functions.R')
### Get Data
entropy.sim <- json.unlist(fromJSON(file='Code and Analysis/Data/Artificial Data Sets/d05/entropy_softmax_21_23_53.txt', method='C'))
### Reset wd to report
setwd('Report/TeX/Pictures/')
### Styling options
################################################################################
################################################################################
cols <- c(rep('red',20),rep('green',20),rep('blue',20))
x    <- 1:ncol(entropy.sim)
png("3arm.png",height=1200,width=1200)
plot(x,entropy.sim[1,],type="l",ylim=c(0,1.6), col = cols[1], xlab = "Steps", ylab= "Sequentiel Entropy" )
for( i in 2:nrow(entropy.sim)){
lines(x,entropy.sim[i,],col = cols[i])
}
legend("bottomright",
c("α = 0.5 | τ = 0.1","α = 0.5 | τ = 0.7","α = 0.5 | τ = 1.8"),
lty = 1,
col = c('red','green','blue'),
cex = 1,
bty = "n",
ncol = 1,
y.intersp = 2,
)
title(main ="Entropy form 3-arm bandit ( μ = (0,0.5,1) | σ = (1,1,1) )")
dev.off()
### Clear workspace
rm(list = ls())
### Set general file path
setwd('~/Documents/GSE/Term 3/Master_Project/Master-Project/Work/')
### Load Packages
if (!require("RColorBrewer")) install.packages("RColorBrewer"); library(RColorBrewer)
### Get auxilliary functions
source('Code and Analysis/R-Files/Auxlliary_Functions.R')
### Get Data
e00 <- read.csv('Code and Analysis/Results/Real data/00/e00.csv')
e01 <- read.csv('Code and Analysis/Results/Real data/01/e01.csv')
e02 <- read.csv('Code and Analysis/Results/Real data/02/e02.csv')
e03 <- read.csv('Code and Analysis/Results/Real data/03/e03.csv')
e04 <- read.csv('Code and Analysis/Results/Real data/04/e04.csv')
e05 <- read.csv('Code and Analysis/Results/Real data/05/e05.csv')
e06 <- read.csv('Code and Analysis/Results/Real data/06/e06.csv')
e07 <- read.csv('Code and Analysis/Results/Real data/07/e07.csv')
#b08 <- read.csv('Code and Analysis/Results/Real data/08/e08.csv')
e09 <- read.csv('Code and Analysis/Results/Real data/09/e09.csv')
#b10 <- read.csv('Code and Analysis/Results/Real data/10/e10.csv')
e20 <- read.csv('Code and Analysis/Results/Real data/20/e20.csv')
e21 <- read.csv('Code and Analysis/Results/Real data/21/e21.csv')
e66 <- read.csv('Code and Analysis/Results/Real data/66/e66.csv')
### Reset wd to report
setwd('Report/TeX/Pictures/')
################################################################################
################################################################################
# Compute Basic variables
N <- 12
M <- ncol(e00)
variables   <- ls()[1:12]
my.env      <- new.env()
# Compute average over columns
col.average <- matrix( NA , nrow = N , ncol = (M-1) )
for( i in 1:N ){
temp.frame <- get( variables[i], envir = my.env )
temp.mean  <- colMeans( temp.frame[,2:M] )
col.average[i,] <- temp.mean
}
# 1) Plot acrros groups
x    <- 1:(M-1)
cols <- brewer.pal(12, 'Set3')
png("entropy_real.png",widht=1200,height=1200)
plot(x,col.average[2,],type="l",ylim=c(0,2), col = cols[1],
xlab = "Steps", ylab= "Avergage entropy accross groups" )
for( i in 3:nrow(col.average)){
lines(x,col.average[i,],col = cols[i])
}
legend("bottomright",
c("Theft","Robbery","Sex", "Drug","OWI","Assault/Murder","Escape","Forgery","Other","Healthy"),
lty = 1,
col = cols[1:10],
cex = 1,
bty = "n",
ncol = 2,
y.intersp = 2,
)
title(main ="Average Entropy of Criminals vs. Controll Group")
dev.off()
### Clear workspace
rm(list = ls())
### Set general file path
setwd('~/Documents/GSE/Term 3/Master_Project/Master-Project/Work/')
### Load Packages
if (!require("RColorBrewer")) install.packages("RColorBrewer"); library(RColorBrewer)
### Get auxilliary functions
source('Code and Analysis/R-Files/Auxlliary_Functions.R')
### Get Data
e00 <- read.csv('Code and Analysis/Results/Real data/00/e00.csv')
e01 <- read.csv('Code and Analysis/Results/Real data/01/e01.csv')
e02 <- read.csv('Code and Analysis/Results/Real data/02/e02.csv')
e03 <- read.csv('Code and Analysis/Results/Real data/03/e03.csv')
e04 <- read.csv('Code and Analysis/Results/Real data/04/e04.csv')
e05 <- read.csv('Code and Analysis/Results/Real data/05/e05.csv')
e06 <- read.csv('Code and Analysis/Results/Real data/06/e06.csv')
e07 <- read.csv('Code and Analysis/Results/Real data/07/e07.csv')
#b08 <- read.csv('Code and Analysis/Results/Real data/08/e08.csv')
e09 <- read.csv('Code and Analysis/Results/Real data/09/e09.csv')
#b10 <- read.csv('Code and Analysis/Results/Real data/10/e10.csv')
e20 <- read.csv('Code and Analysis/Results/Real data/20/e20.csv')
e21 <- read.csv('Code and Analysis/Results/Real data/21/e21.csv')
e66 <- read.csv('Code and Analysis/Results/Real data/66/e66.csv')
### Reset wd to report
setwd('Report/TeX/Pictures/')
################################################################################
################################################################################
# Compute Basic variables
N <- 12
M <- ncol(e00)
variables   <- ls()[1:12]
my.env      <- new.env()
# Compute average over columns
col.average <- matrix( NA , nrow = N , ncol = (M-1) )
for( i in 1:N ){
temp.frame <- get( variables[i], envir = my.env )
temp.mean  <- colMeans( temp.frame[,2:M] )
col.average[i,] <- temp.mean
}
# 1) Plot acrros groups
x    <- 1:(M-1)
cols <- brewer.pal(12, 'Set3')
png("entropy_real.png",widht=1200,height=1200)
plot(x,col.average[2,],type="l",ylim=c(0,2), col = cols[1],
xlab = "Steps", ylab= "Avergage entropy accross groups" )
for( i in 3:nrow(col.average)){
lines(x,col.average[i,],col = cols[i])
}
legend("bottomright",
c("Theft","Robbery","Sex", "Drug","OWI","Assault/Murder","Escape","Forgery","Other","Healthy"),
lty = 1,
col = cols[1:10],
cex = 1,
bty = "n",
ncol = 2,
y.intersp = 2,
)
title(main ="Average Entropy of Criminals vs. Controll Group")
dev.off()
getwd()
plot(x,col.average[2,],type="l",ylim=c(0,2), col = cols[1],
xlab = "Steps", ylab= "Avergage entropy accross groups" )
for( i in 3:nrow(col.average)){
lines(x,col.average[i,],col = cols[i])
}
legend("bottomright",
c("Theft","Robbery","Sex", "Drug","OWI","Assault/Murder","Escape","Forgery","Other","Healthy"),
lty = 1,
col = cols[1:10],
cex = 1,
bty = "n",
ncol = 2,
y.intersp = 2,
)
title(main ="Average Entropy of Criminals vs. Controll Group")
png("entropy_real.png",widht=1200,height=1200)
plot(x,col.average[2,],type="l",ylim=c(0,2), col = cols[1],
xlab = "Steps", ylab= "Avergage entropy accross groups" )
for( i in 3:nrow(col.average)){
lines(x,col.average[i,],col = cols[i])
}
legend("bottomright",
c("Theft","Robbery","Sex", "Drug","OWI","Assault/Murder","Escape","Forgery","Other","Healthy"),
lty = 1,
col = cols[1:10],
cex = 1,
bty = "n",
ncol = 2,
y.intersp = 2,
)
title(main ="Average Entropy of Criminals vs. Controll Group")
dev.off()
png("entropy_real.png",width =1200,height=1200)
plot(x,col.average[2,],type="l",ylim=c(0,2), col = cols[1],
xlab = "Steps", ylab= "Avergage entropy accross groups" )
for( i in 3:nrow(col.average)){
lines(x,col.average[i,],col = cols[i])
}
legend("bottomright",
c("Theft","Robbery","Sex", "Drug","OWI","Assault/Murder","Escape","Forgery","Other","Healthy"),
lty = 1,
col = cols[1:10],
cex = 1,
bty = "n",
ncol = 2,
y.intersp = 2,
)
title(main ="Average Entropy of Criminals vs. Controll Group")
dev.off()
png("entropy_avg.png",width =1200,height=1200)
M02 <- nrow(col.average)
plot(x, col.average[1,],type="l",ylim=c(0,2), col = 'red',
xlab = "Steps", ylab= "Avergage entropy choice")
lines(x,col.average[M02,],col ='blue')
legend("bottomright",
c("Criminals","Controll"),
lty = 1,
col = c('red','blue'),
cex = 1,
bty = "n",
ncol = 1,
y.intersp = 2,
)
title(main ="Average Entropy of Criminals vs. Controll Group")
dev.off()
################################################################################
# Preamble
################################################################################
### Clear workspace
rm(list = ls())
### Set general file path
setwd('~/Documents/GSE/Term 3/Master_Project/Master-Project/Work/')
### Load Packages
if (!require("RColorBrewer")) install.packages("RColorBrewer"); library(RColorBrewer)
### Get auxilliary functions
source('Code and Analysis/R-Files/Auxlliary_Functions.R')
### Get Data
b00 <- read.csv('Code and Analysis/Results/Real data/00/b00.csv')
b01 <- read.csv('Code and Analysis/Results/Real data/01/b01.csv')
b02 <- read.csv('Code and Analysis/Results/Real data/02/b02.csv')
b03 <- read.csv('Code and Analysis/Results/Real data/03/b03.csv')
b04 <- read.csv('Code and Analysis/Results/Real data/04/b04.csv')
b05 <- read.csv('Code and Analysis/Results/Real data/05/b05.csv')
b06 <- read.csv('Code and Analysis/Results/Real data/06/b06.csv')
b07 <- read.csv('Code and Analysis/Results/Real data/07/b07.csv')
#b08 <- read.csv('Code and Analysis/Results/Real data/08/b08.csv')
b09 <- read.csv('Code and Analysis/Results/Real data/09/b09.csv')
#b10 <- read.csv('Code and Analysis/Results/Real data/10/b10.csv')
b20 <- read.csv('Code and Analysis/Results/Real data/20/b20.csv')
b21 <- read.csv('Code and Analysis/Results/Real data/21/b21.csv')
b66 <- read.csv('Code and Analysis/Results/Real data/66/b66.csv')
### Reset wd to report
setwd('Report/TeX/Pictures/')
################################################################################
################################################################################
N <- 12
M <- ncol(b00)
variables   <- ls()[1:12]
my.env      <- new.env()
col.average <- matrix( NA , nrow = N , ncol = (M-1) )
for( i in 1:N ){
temp.frame <- get( variables[i], envir = my.env )
temp.mean  <- colMeans( temp.frame[,2:M] )
col.average[i,] <- temp.mean
}
x    <- 1:(M-1)
cols <- brewer.pal(12, 'Set3')
png("disad.png",height=1200,width = 1200)
plot(x,col.average[2,],type="l",ylim=c(0,1), col = cols[1],
xlab = "Steps", ylab= "Avergage disadvantage choice" )
for( i in 3:nrow(col.average)){
lines(x,col.average[i,],col = cols[i])
}
axis(1, at = seq(1, 10, by = 2), las=1)
legend("bottomleft",
c("Theft","Robbery","Sex", "Drug","OWI","Assault/Murder","Escape","Forgery","Other","Healthy"),
lty = 1,
col = cols[1:10],
cex = 1,
bty = "n",
ncol = 2,
y.intersp = 2,
)
dev.off()
png("disad_avg.png",height=1200,width = 1200)
plot(x, col.average[1,],type="l",ylim=c(0,1), col = 'red',
xlab = "Steps", ylab= "Avergage disadvantage choice")
lines(x,col.average[M,],col ='blue')
axis(1, at = seq(1, 10, by = 2), las=1)
legend("bottomleft",
c("Criminals","Healthy"),
lty = 1,
col = c('red','blue'),
cex = 1,
bty = "n",
ncol = 2,
y.intersp = 2,
)
dev.off()
################################################################################
# Preamble
################################################################################
### Clear workspace
rm(list = ls())
### Set general file path
setwd('~/Documents/GSE/Term 3/Master_Project/Master-Project/Work/')
### Load Packages
if (!require("RColorBrewer")) install.packages("RColorBrewer"); library(RColorBrewer)
if (!require("rjson"))        install.packages("rjson");        library(rjson)
### Get auxilliary functions
source('Code and Analysis/R-Files/Auxlliary_Functions.R')
### Get Data
cosine.cat     <- json.unlist(fromJSON(file='Code and Analysis/Results/Real data/21/cosine_cat.txt', method='C'))
cosine.ent     <- json.unlist(fromJSON(file='Code and Analysis/Results/Real data/21/cosine_ent.txt', method='C'))
edr.ent        <- json.unlist(fromJSON(file='Code and Analysis/Results/Real data/21/edr_sim.txt', method='C'))
eskim.cho      <- json.unlist(fromJSON(file='Code and Analysis/Results/Real data/21/eskin_sim.txt', method='C'))
euclid.cho.dis <- json.unlist(fromJSON(file='Code and Analysis/Results/Real data/21/eucliddist.txt', method='C'))
lin.cho.dis    <- json.unlist(fromJSON(file='Code and Analysis/Results/Real data/21/lin_disim.txt', method='C'))
lin.cho.sim    <- json.unlist(fromJSON(file='Code and Analysis/Results/Real data/21/lin_sim.txt', method='C'))
overlap.cho    <- json.unlist(fromJSON(file='Code and Analysis/Results/Real data/21/overlap.txt', method='C'))
rbf.ent        <- json.unlist(fromJSON(file='Code and Analysis/Results/Real data/21/rbf.txt', method='C'))
timewarp.ent   <- json.unlist(fromJSON(file='Code and Analysis/Results/Real data/21/timewarp.txt', method='C'))
### Reset wd to report
setwd('Report/TeX/Pictures/')
################################################################################
################################################################################
thief      <- rep("Theft",22)
robbery    <- rep("Robbery",6)
sex        <- rep("Sex",17)
drug       <- rep("Drug",22)
owi        <- rep("OWI",4)
aussault   <- rep("Assault",10)
escape     <- rep("Escape",4)
vandalism  <- rep("Vandalism",1)
forgery    <- rep("Forgery",7)
probabiton <- rep("Probabiton",1)
other      <- rep("Other",2)
healthy    <- rep("Healthy",96)
all.names  <- c(thief,robbery,sex,drug,owi,aussault,escape,
vandalism,forgery,probabiton,other,healthy)
h01 <- my.heatmap( cosine.cat,nco=200,colors = "Reds", rname = all.names)
h02 <- my.heatmap( cosine.ent,nco=200,colors = "Reds", rname = all.names)
h03 <- my.heatmap( edr.ent,nco=200,colors = "Reds", rname = all.names)
h04 <- my.heatmap( eskim.cho,nco=200,colors = "Reds", rname = all.names)
h05 <- my.heatmap( euclid.cho.dis,nco=200,colors = "Reds", rname = all.names)
h06 <- my.heatmap( lin.cho.dis,nco=200,colors = "Reds", rname = all.names)
h07 <- my.heatmap( lin.cho.sim,nco=200,colors = "Reds", rname = all.names)
h08 <- my.heatmap( overlap.cho,nco=200,colors = "Reds", rname = all.names)
h09 <- my.heatmap( rbf.ent,nco=200,colors = "Reds", rname = all.names)
h09 <- my.heatmap( timewarp.ent,nco=200,colors = "Reds", rname = all.names)
