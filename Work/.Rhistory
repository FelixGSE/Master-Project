source('Code and Analysis/R-Files/Load_Data.R')
################################################################################
### Clear workspace
rm(list = ls())
### Set general file path
setwd('~/Documents/GSE/Term 3/Master_Project/Master-Project/Work/')
### Load Packages
if (!require("RColorBrewer")) install.packages("RColorBrewer"); library(RColorBrewer)
### Get auxilliary functions
source('Code and Analysis/R-Files/Auxlliary_Functions.R')
### Get Data
source('Code and Analysis/R-Files/Load_Data.R')
read.csv('/Users/felix/Documents/GSE/Term 3/External Data/prisondata/characteristics.csv')
read.csv('/Users/felix/Documents/GSE/Term 3/External Data/prisondata/characteristics.csv',header=TRUE)
read.csv('/Users/felix/Documents/GSE/Term 3/External Data/prisondata/characteristics.csv',col.names =TRUE)
characteristics <- read.csv2("~/Documents/GSE/Term 3/External Data/prisondata/characteristics.csv")
View(characteristics)
characteristics <- read.csv2("~/Documents/GSE/Term 3/External Data/prisondata/characteristics.csv")
head(characteristics)
table(characteristics)
aggregate( age ~ crime, data=characteristics, FUN=mean)
t(characteristics)
characteristics
characteristics2 <- characteristics[,-1]
rownames(characteristics2) <- characteristics[,1]
characteristics2
colnames(characteristics)
t(characteristics)
t(characteristics2)
aggregate( age ~ crime, data=characteristics, FUN=mean)
aggregate( age ~ crime, data=characteristics2, FUN=mean)
aggregate( sex ~ crime, data=characteristics2, FUN=mean)
aggregate( sex , data=characteristics2, FUN=mean)
aggregate(. ~ Species, data = iris, mean)
head(iris)
aggregate( . ~ sex , data=characteristics2, FUN=mean)
colnames(iris)
aggregate( . ~ sex , data=characteristics2, mean)
aggregate( . ~ sex , data=df03, mean)
df03 <- t(df02)
df01 <- read.csv2("~/Documents/GSE/Term 3/External Data/prisondata/characteristics.csv")
################################################################################
################################################################################
df02 <- df01[,-1]
rownames(df02) <- df01[,1]
df03 <- t(df02)
aggregate( . ~ sex , data=df03, mean)
aggregate( age ~ sex , data=df03, mean)
aggregate( age ~ crime , data=df03, mean)
aggregate( age  ~ crime , data=df03, mode)
mode(c(1,2,3,3,1,1))
source('Code and Analysis/R-Files/Load_Data.R')
aggregate( age  ~ crime , data=df03, my.mode)
df03 <- t(df02)
rm(list = ls())
### Set general file path
setwd('~/Documents/GSE/Term 3/Master_Project/Master-Project/Work/')
### Load Packages
if (!require("RColorBrewer")) install.packages("RColorBrewer"); library(RColorBrewer)
### Get auxilliary functions
source('Code and Analysis/R-Files/Auxlliary_Functions.R')
### Get Data
source('Code and Analysis/R-Files/Load_Data.R')
### Load Data
df01 <- read.csv2("~/Documents/GSE/Term 3/External Data/prisondata/characteristics.csv")
################################################################################
################################################################################
df02 <- df01[,-1]
rownames(df02) <- df01[,1]
df03 <- t(df02)
aggregate( age  ~ crime , data=df03, my.mode)
source('Code and Analysis/R-Files/Auxlliary_Functions.R')
aggregate( age  ~ crime , data=df03, my.mode)
df.count <- table(df03$crime)
head(df03)
df.count <- table(df03[,5])
df.count
t(df.count)
df.count <- aggregate( crime , data=df03, count )
class(table(df03[,5]))
attributes(table(df03[,5]))
as.numeric(table(df03[,5]))
df.educ  <- aggregate( education  ~ crime , data=df03, mean )
df.educ
names(df03)
colnames(df03)
df.iq    <- aggregate( Beta IQ  ~ crime , data=df03, mean )
df.IQ    <- aggregate( Beta IQ  ~ crime , data=df03, mean )
df.IQ    <- aggregate( Beta IQ ~ crime , data=df03, mean )
colnames(df03)
colnames(df03)[-1]
colnames(df03)[20]
colnames(df03)[21]
colnames(df03)[21] <- "iq"
df.IQ    <- aggregate( iq ~ crime , data=df03, mean )
df.IQ
df.count <- as.numeric(table(df03[,5]))
df.age   <- aggregate( age  ~ crime , data=df03, mean )
df.educ  <- aggregate( education  ~ crime , data=df03, mean )
df.IQ    <- aggregate( iq ~ crime , data=df03, mean )
df01
merge( df.age, df.educ)
merge( df.age, df.educ, df.IQ)
Reduce(merge, list(df.age,df.educ,df.educ))
Reduce(merge, list(df.age,df.educ,df.IQ))
insertaCols<-function(dad){
nueva<-as.data.frame(matrix(rep(0,nrow(daf)*ncol(daf)*2 ),ncol=ncol(daf)*2))
for(k in 1:ncol(daf)){
nueva[,(k*2)-1]=daf[,k]
colnames(nueva)[(k*2)-1]=colnames(daf)[k]
}
return(nueva)
}
as.data.frame(append(Reduce(merge, list(df.age,df.educ,df.IQ))
, list(C = df.count), after = 1))
as.data.frame(append(Reduce(merge, list(df.age,df.educ,df.IQ)) , list(Count = df.count), after = 1))
rownames(df01)
colnames(df01)
names(df03)
colnames(df03)
df03$mmpi-L
df03[,7]
df03[22]
df03[,22]
df03[,20]
df.IQ    <- aggregate( tabe ~ crime , data=df03, mean )
colnames(df03)[20] <- "tabe"
df.tabe    <- aggregate( tabe ~ crime , data=df03, mean )
as.data.frame(append(Reduce(merge, list(df.age,df.educ,df.tabe,df.IQ)) , list(Count = df.count), after = 1))
rownames(final.frame) <- rnames
rnames <- c("Theft/Burglary","Robbery","Sex","Drug","OWI","Assault","Vandalism","Forgery","Probabiton","Other")
merge.frame <- Reduce(merge, list(df.age,df.educ,df.tabe,df.IQ))
final.frame <- as.data.frame(append(merge.frame) , list(Count = df.count), after = 1))
final.frame <- as.data.frame(append(merge.frame , list(Count = df.count), after = 1))
rownames(final.frame) <- rnames
length(rnames)
rnames <- c("Theft/Burglary","Robbery","Sex","Drug","OWI","Assault","escape/ failure to appear","Vandalism","Forgery","Probabiton","Other")
rownames(final.frame) <- rnames
final.frame
final.frame <- as.data.frame(append(merge.frame , list(Count = df.count), after = 1))[,-1]
rownames(final.frame) <- rnames
final.frame <- as.data.frame(append(merge.frame , list(Count = df.count), after = 1))[,-1]
rownames(final.frame) <- rnames
final.frame
final.frame[is.num] <- lapply(final.frame[is.num], round, 2)
is.num <- sapply(final.frame, is.numeric)
final.frame[is.num] <- lapply(final.frame[is.num], round, 2)
final.frame
cnames <- c("Count","Age","TABE Score","Beta IQ")
colnames(final.frame) <- cnames
is.num <- sapply(final.frame, is.numeric)
final.frame[is.num] <- lapply(final.frame[is.num], round, 2)
final.frame
cnames <- c("Count","Age","TABE Score","Education","Beta IQ")
merge.frame <- Reduce(merge, list(df.age,df.educ,df.tabe,df.IQ))
final.frame <- as.data.frame(append(merge.frame , list(Count = df.count), after = 1))[,-1]
rownames(final.frame) <- rnames
colnames(final.frame) <- cnames
is.num <- sapply(final.frame, is.numeric)
final.frame[is.num] <- lapply(final.frame[is.num], round, 2)
final.frame
t(final.frame)
sd.count <- as.numeric(table(df03[,5]))
sd.age   <- aggregate( age  ~ crime , data=df03, sd )
sd.educ  <- aggregate( education  ~ crime , data=df03, sd )
sd.tabe  <- aggregate( tabe ~ crime , data=df03, sd )
sd.IQ    <- aggregate( iq ~ crime , data=df03, sd )
sd.merge <- Reduce(merge, list(sd.age,sd.educ,sd.tabe,sd.IQ))
sd.merge
if (!require("tikzDevice")) install.packages("tikzDevice"); library(tikzDevice)
stargazer
stargazer(final.frame, summary=FALSE, rownames=FALSE)
if (!require("stargazer")) install.packages("stargazer"); library(stargazer)
stargazer(final.frame, summary=FALSE, rownames=FALSE)
stargazer(final.frame, summary=FALSE, rownames=TRUE)
stargazer(final.frame, summary=TRUE, rownames=TRUE)
stargazer(final.frame,sd.merge, summary=TRUE, rownames=TRUE)
if (!require("tikzDevice")) install.packages("tikzDevice"); library(tikzDevice)
### Get Data
entropy.sim <- json.unlist(fromJSON(file='Code and Analysis/Data/Artificial Data Sets/d05/entropy_softmax_21_23_53.txt', method='C'))
### Reset wd to report
### Set general file path
setwd('~/Documents/GSE/Term 3/Master_Project/Master-Project/Work/')
### Load Packages
if (!require("RColorBrewer")) install.packages("RColorBrewer"); library(RColorBrewer)
if (!require("rjson"))        install.packages("rjson");        library(rjson)
if (!require("tikzDevice")) install.packages("tikzDevice"); library(tikzDevice)
### Get auxilliary functions
source('Code and Analysis/R-Files/Auxlliary_Functions.R')
### Get Data
entropy.sim <- json.unlist(fromJSON(file='Code and Analysis/Data/Artificial Data Sets/d05/entropy_softmax_21_23_53.txt', method='C'))
### Reset wd to report
setwd('Report/TeX/Pictures/')
cols <- c(rep('red',20),rep('green',20),rep('blue',20))
x    <- 1:ncol(entropy.sim)
tikz(’tikz-example.tex’, width = 3.25, height = 3.25)
plot(x,entropy.sim[1,],type="l",ylim=c(0,1.6), col = cols[1], xlab = "Steps", ylab= "Sequentiel Entropy" )
for( i in 2:nrow(entropy.sim)){
lines(x,entropy.sim[i,],col = cols[i])
}
legend("bottomright",
c("α = 0.5 | τ = 0.1","α = 0.5 | τ = 0.7","α = 0.5 | τ = 1.8"),
lty = 1,
col = c('red','green','blue'),
cex = 1,
bty = "n",
ncol = 1,
y.intersp = 2,
)
title(main ="Entropy form 3-arm bandit ( μ = (0,0.5,1) | σ = (1,1,1) )")
dev.off()
tikz("tikz-example.tex", width = 3.25, height = 3.25)
plot(x,entropy.sim[1,],type="l",ylim=c(0,1.6), col = cols[1], xlab = "Steps", ylab= "Sequentiel Entropy" )
for( i in 2:nrow(entropy.sim)){
lines(x,entropy.sim[i,],col = cols[i])
}
legend("bottomright",
c("α = 0.5 | τ = 0.1","α = 0.5 | τ = 0.7","α = 0.5 | τ = 1.8"),
lty = 1,
col = c('red','green','blue'),
cex = 1,
bty = "n",
ncol = 1,
y.intersp = 2,
)
title(main ="Entropy form 3-arm bandit ( μ = (0,0.5,1) | σ = (1,1,1) )")
dev.off()
plot(x,entropy.sim[1,],type="l",ylim=c(0,1.6), col = cols[1], xlab = "Steps", ylab= "Sequentiel Entropy" )
for( i in 2:nrow(entropy.sim)){
lines(x,entropy.sim[i,],col = cols[i])
}
legend("bottomright",
c("\alpha = 0.5 | \tau = 0.1","\alpha = 0.5 | \tau = 0.7"," \alpha = 0.5 | \tau = 1.8"),
lty = 1,
col = c('red','green','blue'),
cex = 1,
bty = "n",
ncol = 1,
y.intersp = 2,
)
title(main ="Entropy form 3-arm bandit ( \mu = (0,0.5,1) | \sigma = (1,1,1) )")
dev.off()
plot(x,entropy.sim[1,],type="l",ylim=c(0,1.6), col = cols[1], xlab = "Steps", ylab= "Sequentiel Entropy" )
for( i in 2:nrow(entropy.sim)){
lines(x,entropy.sim[i,],col = cols[i])
}
legend("bottomright",
c("\alpha = 0.5 | \tau = 0.1","\alpha = 0.5 | \tau = 0.7"," \alpha = 0.5 | \tau = 1.8"),
lty = 1,
col = c('red','green','blue'),
cex = 1,
bty = "n",
ncol = 1,
y.intersp = 2,
)
title(main ="Entropy form 3-arm bandit (  = (0,0.5,1) | \sigma = (1,1,1) )")
dev.off()
tikz("tikz-example.tex", width = 3.25, height = 3.25)
plot(x,entropy.sim[1,],type="l",ylim=c(0,1.6), col = cols[1], xlab = "Steps", ylab= "Sequentiel Entropy" )
for( i in 2:nrow(entropy.sim)){
lines(x,entropy.sim[i,],col = cols[i])
}
legend("bottomright",
c("\alpha = 0.5 | \tau = 0.1","\alpha = 0.5 | \tau = 0.7"," \alpha = 0.5 | \tau = 1.8"),
lty = 1,
col = c('red','green','blue'),
cex = 1,
bty = "n",
ncol = 1,
y.intersp = 2,
)
title(main ="Entropy form 3-arm bandit ( mu = (0,0.5,1) | sigma = (1,1,1) )")
dev.off()
tikz("tikz-example.tex", width = 7, height =7)
plot(x,entropy.sim[1,],type="l",ylim=c(0,1.6), col = cols[1], xlab = "Steps", ylab= "Sequentiel Entropy" )
for( i in 2:nrow(entropy.sim)){
lines(x,entropy.sim[i,],col = cols[i])
}
legend("bottomright",
c("\alpha = 0.5 | \tau = 0.1","\alpha = 0.5 | \tau = 0.7"," \alpha = 0.5 | \tau = 1.8"),
lty = 1,
col = c('red','green','blue'),
cex = 1,
bty = "n",
ncol = 1,
y.intersp = 2,
)
title(main ="Entropy form 3-arm bandit ( mu = (0,0.5,1) | sigma = (1,1,1) )")
dev.off()
tikz("tikz-example.tex", width = 7, height =7)
plot(x,entropy.sim[1,],type="l",ylim=c(0,1.6), col = cols[1], xlab = "Steps", ylab= "Sequentiel Entropy" )
for( i in 2:nrow(entropy.sim)){
lines(x,entropy.sim[i,],col = cols[i])
}
legend("bottomright",
c("alpha = 0.5 | tau = 0.1","alpha = 0.5 | tau = 0.7"," alpha = 0.5 | tau = 1.8"),
lty = 1,
col = c('red','green','blue'),
cex = 1,
bty = "n",
ncol = 1,
y.intersp = 2,
)
title(main ="Entropy form 3-arm bandit ( mu = (0,0.5,1) | sigma = (1,1,1) )")
dev.off()
tikz("tikz-example.tex", width = 2, height =2)
plot(x,entropy.sim[1,],type="l",ylim=c(0,1.6), col = cols[1], xlab = "Steps", ylab= "Sequentiel Entropy" )
for( i in 2:nrow(entropy.sim)){
lines(x,entropy.sim[i,],col = cols[i])
}
legend("bottomright",
c("alpha = 0.5 | tau = 0.1","alpha = 0.5 | tau = 0.7"," alpha = 0.5 | tau = 1.8"),
lty = 1,
col = c('red','green','blue'),
cex = 1,
bty = "n",
ncol = 1,
y.intersp = 2,
)
title(main ="Entropy form 3-arm bandit ( mu = (0,0.5,1) | sigma = (1,1,1) )")
dev.off()
tikz("tikz-example.tex", width = 3.5, height =3.5)
plot(x,entropy.sim[1,],type="l",ylim=c(0,1.6), col = cols[1], xlab = "Steps", ylab= "Sequentiel Entropy" )
for( i in 2:nrow(entropy.sim)){
lines(x,entropy.sim[i,],col = cols[i])
}
legend("bottomright",
c("alpha = 0.5 | tau = 0.1","alpha = 0.5 | tau = 0.7"," alpha = 0.5 | tau = 1.8"),
lty = 1,
col = c('red','green','blue'),
cex = 1,
bty = "n",
ncol = 1,
y.intersp = 2,
)
title(main ="Entropy form 3-arm bandit ( mu = (0,0.5,1) | sigma = (1,1,1) )")
dev.off()
tikz("tikz-example.tex", width = 3.5, height =3.5)
plot(x,entropy.sim[1,],type="l",ylim=c(0,1.6), col = cols[1], xlab = "Steps", ylab= "Sequentiel Entropy" )
for( i in 2:nrow(entropy.sim)){
lines(x,entropy.sim[i,],col = cols[i])
}
legend("bottomright",
c("alpha = 0.5 | tau = 0.1","alpha = 0.5 | tau = 0.7"," alpha = 0.5 | tau = 1.8"),
lty = 1,
col = c('red','green','blue'),
cex = 1,
bty = "n",
ncol = 1,
y.intersp = 2,
)
title(main="$p(x)=\\frac{1}{\\sqrt{2\\pi}}e^{-\\frac{x^2}{2}}$")
dev.off()
debugSource('~/Documents/GSE/Term 3/Master_Project/Master-Project/Work/Code and Analysis/R-Files/Summary.R')
debugSource('~/Documents/GSE/Term 3/Master_Project/Master-Project/Work/Code and Analysis/R-Files/Summary.R')
debugSource('~/Documents/GSE/Term 3/Master_Project/Master-Project/Work/Code and Analysis/R-Files/Summary.R')
debugSource('~/Documents/GSE/Term 3/Master_Project/Master-Project/Work/Code and Analysis/R-Files/Summary.R')
source('~/Documents/GSE/Term 3/Master_Project/Master-Project/Work/Code and Analysis/R-Files/Summary.R')
Q
Q
Q
Q
Q
source('~/Documents/GSE/Term 3/Master_Project/Master-Project/Work/Code and Analysis/R-Files/Summary.R')
source('~/Documents/GSE/Term 3/Master_Project/Master-Project/Work/Code and Analysis/R-Files/Summary.R')
